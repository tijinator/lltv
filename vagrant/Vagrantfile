# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# Vagrant.require_plugin "vagrant-vbguest"
Vagrant.require_plugin "vagrant-omnibus"
Vagrant.require_plugin "vagrant-cachier"
Vagrant.require_plugin "librarian-chef"

# Server roles includes: app, web, db
boxes = [
  {
    name: 'lltv-dev',
    roles: ['app'],
    ip: '192.168.3.2',
    vbox_config: [
      { '--memory' => '8192' }
    ],
    forwarded_ports: [
      { 80 => 8080 },
      { 3000 => 3000 },
      { 9001 => 9001 },
      { 35741 => 35741 },
      { 8003 => 8003 },
      { 9200 => 9200 }
    ],
    synced_folders: [
      { '../backend' => '/home/vagrant/backend' }
    ]
  },
  {
    name: 'lltv-db',
    roles: ['db'],
    ip: '192.168.3.3',
    vbox_config: [
      { '--memory' => '2048' }
    ],
    forwarded_ports: [
      { 5432 => 5432 }
    ]
  }
]

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # box setting for all vm
  config.vm.box = "ubuntu/trusty64"
  config.vm.box_url = "https://vagrantcloud.com/ubuntu/boxes/trusty64/versions/20151203.2.0/providers/virtualbox.box"

  config.ssh.forward_agent = true

  # vagrant-omnibus
  if Vagrant.has_plugin?('vagrant-omnibus')
    config.omnibus.chef_version = :latest
  end

  # vagrant-cachier, caching packages
  if Vagrant.has_plugin?('vagrant-cachier')
    config.cache.scope = :box
  end

  boxes.each do |opts|
    config.vm.define opts[:name], :priviledge => false do |config|
      # set hostname
      config.vm.hostname = opts[:name]

      # network config
      config.vm.network :private_network, ip: opts[:ip]

      # forwarding ports
      opts[:forwarded_ports].each do |port|
        port.each do |guest, host|
          config.vm.network :forwarded_port, guest: guest, host: host, auto_correct: true
        end
      end if opts[:forwarded_ports]

      # Synced folders
      opts[:synced_folders].each do |folder|
        folder.each do |folder1, folder2|
          config.vm.synced_folder folder1, folder2
        end
      end if opts[:synced_folders]

      # VirtualBox customizations
      unless opts[:vbox_config].nil?
        config.vm.provider :virtualbox do |vb|
          # naming for vm box
          vb.name = "vagrant_#{opts[:name]}"

          # set the hw config
          opts[:vbox_config].each do |hash|
            hash.each do |key, value|
              vb.customize ['modifyvm', :id, key, value]
            end
          end
        end
      end

      # server notify
      config.vm.provision :shell, inline: "echo 'Server: #{opts[:name]} - IP: #{opts[:ip]}'"

      # custom commands
      opts[:commands].each do |cmd|
        config.vm.provision :shell, inline: cmd
      end if opts[:commands]

      # Configure the box with Chef
      config.vm.provision :chef_solo do |chef|
        # Chef config
        chef.cookbooks_path = ['cookbooks', 'site-cookbooks']
        chef.roles_path = 'roles/dev'
        chef.data_bags_path = 'data_bags'

        # Add a Chef roles if specified
        opts[:roles].each do |role|
          chef.add_role(role)
        end if opts[:roles].kind_of?(Array)

        # chef.log_level = :debug
      end
    end
  end
end
